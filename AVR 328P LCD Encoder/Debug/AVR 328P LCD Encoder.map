Archive member included because of file (symbol)

c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o (exit)
c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
                              lcd.o (__do_copy_data)

Discarded input sections

 .data          0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
 .text          0x00000000        0x0 AVR 328P LCD Encoder.o
 .data          0x00000000        0x0 AVR 328P LCD Encoder.o
 .bss           0x00000000        0x0 AVR 328P LCD Encoder.o
 .text          0x00000000        0x0 lcd.o
 .data          0x00000000        0x0 lcd.o
 .bss           0x00000000        0x0 lcd.o
 .text.lcd_write_string_4d
                0x00000000       0x62 lcd.o
 .text.lcd_puts
                0x00000000       0x28 lcd.o
 .rodata.str1.1
                0x00000000       0x15 lcd.o
 .text.lcd_clrln
                0x00000000       0x12 lcd.o
 .text          0x00000000        0x0 lcd_menu.o
 .data          0x00000000        0x0 lcd_menu.o
 .bss           0x00000000        0x0 lcd_menu.o
 .text          0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .data          0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text          0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .data          0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
LOAD AVR 328P LCD Encoder.o
LOAD lcd.o
LOAD lcd_menu.o
START GROUP
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5\libm.a
END GROUP
START GROUP
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5\libm.a
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5\libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x5a8
 *(.vectors)
 .vectors       0x00000000       0x68 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.progmem*)
                0x00000068                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000068                __ctors_start = .
 *(.ctors)
                0x00000068                __ctors_end = .
                0x00000068                __dtors_start = .
 *(.dtors)
                0x00000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000068        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
                0x00000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000068        0xc c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000074       0x16 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
                0x00000074                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000008a        0x8 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x00000092        0x4 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
                0x00000092                __vector_22
                0x00000092                __vector_24
                0x00000092                __vector_12
                0x00000092                __bad_interrupt
                0x00000092                __vector_6
                0x00000092                __vector_23
                0x00000092                __vector_25
                0x00000092                __vector_11
                0x00000092                __vector_13
                0x00000092                __vector_17
                0x00000092                __vector_19
                0x00000092                __vector_7
                0x00000092                __vector_5
                0x00000092                __vector_4
                0x00000092                __vector_9
                0x00000092                __vector_2
                0x00000092                __vector_21
                0x00000092                __vector_15
                0x00000092                __vector_8
                0x00000092                __vector_14
                0x00000092                __vector_10
                0x00000092                __vector_16
                0x00000092                __vector_18
                0x00000092                __vector_20
                0x00000096                . = ALIGN (0x2)
 *(.text.*)
 .text.main     0x00000096       0x44 AVR 328P LCD Encoder.o
                0x00000096                main
 .text.__vector_1
                0x000000da       0x56 AVR 328P LCD Encoder.o
                0x000000da                __vector_1
 .text.__vector_3
                0x00000130       0x4e AVR 328P LCD Encoder.o
                0x00000130                __vector_3
 .text.lcd_write_4
                0x0000017e       0x50 lcd.o
                0x0000017e                lcd_write_4
 .text.lcd_write_character_4d
                0x000001ce       0x1a lcd.o
                0x000001ce                lcd_write_character_4d
 .text.lcd_write_instruction_4d
                0x000001e8       0x26 lcd.o
                0x000001e8                lcd_write_instruction_4d
 .text.lcd_init_4d
                0x0000020e       0xe8 lcd.o
                0x0000020e                lcd_init_4d
 .text.lcd_gotoxy
                0x000002f6       0x36 lcd.o
                0x000002f6                lcd_gotoxy
 .text.lcd_clrsc
                0x0000032c        0x8 lcd.o
                0x0000032c                lcd_clrsc
 .text.lcd_write_string_const
                0x00000334       0x62 lcd.o
                0x00000334                lcd_write_string_const
 .text.show_menu
                0x00000396      0x170 lcd_menu.o
                0x00000396                show_menu
 .text.browse_menu
                0x00000506       0x9e lcd_menu.o
                0x00000506                browse_menu
                0x000005a4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000005a4        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
                0x000005a4                _exit
                0x000005a4                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000005a4        0x4 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000005a8                _etext = .

.data           0x00800100      0x20c load address 0x000005a8
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 *(.data*)
 .data.selected
                0x00800100        0x1 lcd_menu.o
 *(.rodata)
 *(.rodata*)
 .rodata.menu   0x00800101       0xd0 lcd_menu.o
                0x00800101                menu
 .rodata.menu_210
                0x008001d1        0x7 lcd_menu.o
                0x008001d1                menu_210
 .rodata.menu_209
                0x008001d8        0xc lcd_menu.o
                0x008001d8                menu_209
 .rodata.menu_208
                0x008001e4        0xc lcd_menu.o
                0x008001e4                menu_208
 .rodata.menu_207
                0x008001f0        0xc lcd_menu.o
                0x008001f0                menu_207
 .rodata.menu_206
                0x008001fc        0xc lcd_menu.o
                0x008001fc                menu_206
 .rodata.menu_205
                0x00800208        0xc lcd_menu.o
                0x00800208                menu_205
 .rodata.menu_204
                0x00800214        0xc lcd_menu.o
                0x00800214                menu_204
 .rodata.menu_203
                0x00800220        0xc lcd_menu.o
                0x00800220                menu_203
 .rodata.menu_202
                0x0080022c        0xc lcd_menu.o
                0x0080022c                menu_202
 .rodata.menu_201
                0x00800238        0xc lcd_menu.o
                0x00800238                menu_201
 .rodata.menu_200
                0x00800244        0xe lcd_menu.o
                0x00800244                menu_200
 .rodata.menu_110
                0x00800252        0x7 lcd_menu.o
                0x00800252                menu_110
 .rodata.menu_109
                0x00800259        0xc lcd_menu.o
                0x00800259                menu_109
 .rodata.menu_108
                0x00800265        0xc lcd_menu.o
                0x00800265                menu_108
 .rodata.menu_107
                0x00800271        0xc lcd_menu.o
                0x00800271                menu_107
 .rodata.menu_106
                0x0080027d        0xc lcd_menu.o
                0x0080027d                menu_106
 .rodata.menu_105
                0x00800289        0xc lcd_menu.o
                0x00800289                menu_105
 .rodata.menu_104
                0x00800295        0xc lcd_menu.o
                0x00800295                menu_104
 .rodata.menu_103
                0x008002a1        0xc lcd_menu.o
                0x008002a1                menu_103
 .rodata.menu_102
                0x008002ad        0xc lcd_menu.o
                0x008002ad                menu_102
 .rodata.menu_101
                0x008002b9        0xc lcd_menu.o
                0x008002b9                menu_101
 .rodata.menu_100
                0x008002c5        0xe lcd_menu.o
                0x008002c5                menu_100
 .rodata.menu_003
                0x008002d3        0x7 lcd_menu.o
                0x008002d3                menu_003
 .rodata.menu_002
                0x008002da        0x7 lcd_menu.o
                0x008002da                menu_002
 .rodata.menu_001
                0x008002e1       0x15 lcd_menu.o
                0x008002e1                menu_001
 .rodata.menu_000
                0x008002f6       0x15 lcd_menu.o
                0x008002f6                menu_000
 *(.gnu.linkonce.d*)
                0x0080030c                . = ALIGN (0x2)
 *fill*         0x0080030b        0x1 
                0x0080030c                _edata = .
                0x0080030c                PROVIDE (__data_end, .)

.bss            0x0080030c        0x0
                0x0080030c                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 *(COMMON)
                0x0080030c                PROVIDE (__bss_end, .)
                0x000005a8                __data_load_start = LOADADDR (.data)
                0x000007b4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080030c        0x0
                0x0080030c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080030c                PROVIDE (__noinit_end, .)
                0x0080030c                _end = .
                0x0080030c                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x30
 *(.comment)
 .comment       0x00000000       0x30 AVR 328P LCD Encoder.o
                                 0x31 (size before relaxing)
 .comment       0x00000000       0x31 lcd.o
 .comment       0x00000000       0x31 lcd_menu.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xc0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x30 AVR 328P LCD Encoder.o
 .debug_aranges
                0x00000030       0x68 lcd.o
 .debug_aranges
                0x00000098       0x28 lcd_menu.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000     0x110b
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000      0x1b4 AVR 328P LCD Encoder.o
 .debug_info    0x000001b4      0x918 lcd.o
 .debug_info    0x00000acc      0x63f lcd_menu.o

.debug_abbrev   0x00000000      0x537
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x138 AVR 328P LCD Encoder.o
 .debug_abbrev  0x00000138      0x20c lcd.o
 .debug_abbrev  0x00000344      0x1f3 lcd_menu.o

.debug_line     0x00000000      0x636
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x00000000      0x186 AVR 328P LCD Encoder.o
 .debug_line    0x00000186      0x2d3 lcd.o
 .debug_line    0x00000459      0x1dd lcd_menu.o

.debug_frame    0x00000000      0x224
 *(.debug_frame)
 .debug_frame   0x00000000       0xd4 AVR 328P LCD Encoder.o
 .debug_frame   0x000000d4      0x108 lcd.o
 .debug_frame   0x000001dc       0x48 lcd_menu.o

.debug_str      0x00000000      0x408
 *(.debug_str)
 .debug_str     0x00000000      0x1d0 AVR 328P LCD Encoder.o
                                0x209 (size before relaxing)
 .debug_str     0x000001d0       0xe0 lcd.o
                                0x29c (size before relaxing)
 .debug_str     0x000002b0      0x158 lcd_menu.o
                                0x366 (size before relaxing)

.debug_loc      0x00000000      0x7ca
 *(.debug_loc)
 .debug_loc     0x00000000      0x196 AVR 328P LCD Encoder.o
 .debug_loc     0x00000196      0x47d lcd.o
 .debug_loc     0x00000613      0x1b7 lcd_menu.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000       0x90
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x20 AVR 328P LCD Encoder.o
 .debug_ranges  0x00000020       0x58 lcd.o
 .debug_ranges  0x00000078       0x18 lcd_menu.o

.debug_macro
 *(.debug_macro)
OUTPUT(AVR 328P LCD Encoder.elf elf32-avr)
LOAD linker stubs
